package oem.edge.ed.odc.applet;
/*                       Copyright Header Check                             */
/*   --------------------------------------------------------------------   */
/*                                                                          */
/*     OCO Source Materials                                                 */
/*                                                                          */
/*     Product(s): PROFIT                                                   */
/*                                                                          */
/*     (C)Copyright IBM Corp. 2003-2004                                     */
/*                                                                          */
/*     All Rights Reserved                                                  */
/*     US Government Users Restricted Rigts                                 */
/*                                                                          */
/*     The source code for this program is not published or otherwise       */
/*     divested of its trade secrets, irrespective of what has been         */
/*     deposited with the US Copyright Office.                              */
/*                                                                          */
/*   --------------------------------------------------------------------   */
/*     Please do not remove any of these commented lines  20 lines          */
/*   --------------------------------------------------------------------   */
/*                       Copyright Footer Check                             */

import com.ibm.as400.webaccess.common.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;

import com.lotus.sametime.core.comparch.STSession;
import com.lotus.sametime.core.comparch.DuplicateObjectException;
import com.lotus.sametime.core.constants.STError;
import com.lotus.sametime.core.types.*;
import com.lotus.sametime.community.*;
import com.lotus.sametime.awarenessui.list.AwarenessList;
import com.lotus.sametime.awarenessui.av.AVController;
import com.lotus.sametime.awarenessui.*;
import com.lotus.sametime.awareness.STWatchedUser;
import com.lotus.sametime.commui.*;

import com.lotus.sametime.core.util.connection.*;

/**
 * Insert the type's description here.
 * Creation date: (6/12/2002 11:00:48 AM)
 * @author: Mike Zarnick
 */
public class SametimeClient extends Frame implements ResolveViewListener {

class AvlHandler extends AwarenessViewAdapter {
		public void selectionChanged(AwarenessViewEvent e) {
			//System.out.println("Awareness selection changed.");
			STWatchedUser[] users = m_awarenessList.getSelectedItems();
			getRemoveMI().setEnabled(users != null && users.length > 0);
		}
	}
	private STSession m_session;
	private AwarenessList m_awarenessList;
	private AvlHandler avl = new AvlHandler();
	private int port = 1533;
	private ConfigFile cfg = null;
	private final static int BUDDY_LIST_ATT_KEY = 0xFFFF;
	private final String DISCONNECTED = "Disconnected";
	private final String ACTIVE = "I Am Active";
	private final String AWAY = "I Am Away";
	private final String DND = "Do Not Disturb Me";
	private Connection conn[] = new Connection[1];
	private MenuItem ivjAddMI = null;
	private Panel ivjContentsPane = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private Menu ivjFileM = null;
	private MenuItem ivjLoginMI = null;
	private MenuItem ivjLogoffMI = null;
	private Menu ivjPeopleM = null;
	private MenuItem ivjRemoveMI = null;
	private MenuBar ivjSametimeClientMenuBar = null;
	private CommunityService ivjCommunityService = null;
	private Choice ivjStatusCB = null;
	private Button ivjCanBtn = null;
	private Panel ivjContentsPane1 = null;
	private Label ivjLabel1 = null;
	private Label ivjLabel2 = null;
	private Button ivjOkBtn = null;
	private Panel ivjPanel1 = null;
	private TextField ivjPwdTF = null;
	private TextField ivjUidTF = null;
	private Dialog ivjLoginDlg = null;

class IvjEventHandler implements com.lotus.sametime.community.LoginListener, java.awt.event.ActionListener, java.awt.event.ItemListener, java.awt.event.TextListener, java.awt.event.WindowListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == SametimeClient.this.getUidTF()) 
				connEtoM1(e);
			if (e.getSource() == SametimeClient.this.getPwdTF()) 
				connEtoC8(e);
			if (e.getSource() == SametimeClient.this.getOkBtn()) 
				connEtoC9(e);
			if (e.getSource() == SametimeClient.this.getCanBtn()) 
				connEtoM2(e);
			if (e.getSource() == SametimeClient.this.getLogoffMI()) 
				connEtoC10(e);
			if (e.getSource() == SametimeClient.this.getLoginMI()) 
				connEtoC11(e);
			if (e.getSource() == SametimeClient.this.getAddMI()) 
				connEtoC12(e);
			if (e.getSource() == SametimeClient.this.getRemoveMI()) 
				connEtoC14(e);
		};
		public void itemStateChanged(java.awt.event.ItemEvent e) {
			if (e.getSource() == SametimeClient.this.getStatusCB()) 
				connEtoC5(e);
		};
		public void loggedIn(com.lotus.sametime.community.LoginEvent arg1) {
			if (arg1.getSource() == SametimeClient.this.getCommunityService()) 
				connEtoC3(arg1);
		};
		public void loggedOut(com.lotus.sametime.community.LoginEvent arg1) {
			if (arg1.getSource() == SametimeClient.this.getCommunityService()) 
				connEtoC4(arg1);
		};
		public void textValueChanged(java.awt.event.TextEvent e) {
			if (e.getSource() == SametimeClient.this.getUidTF()) 
				connEtoC6(e);
			if (e.getSource() == SametimeClient.this.getPwdTF()) 
				connEtoC7(e);
		};
		public void windowActivated(java.awt.event.WindowEvent e) {};
		public void windowClosed(java.awt.event.WindowEvent e) {};
		public void windowClosing(java.awt.event.WindowEvent e) {
			if (e.getSource() == SametimeClient.this) 
				connEtoC13(e);
			if (e.getSource() == SametimeClient.this) 
				connEtoC1(e);
		};
		public void windowDeactivated(java.awt.event.WindowEvent e) {};
		public void windowDeiconified(java.awt.event.WindowEvent e) {};
		public void windowIconified(java.awt.event.WindowEvent e) {};
		public void windowOpened(java.awt.event.WindowEvent e) {
			if (e.getSource() == SametimeClient.this) 
				connEtoC15(e);
		};
	};
/**
 * SametimeClient constructor comment.
 */
public SametimeClient() {
	super();
	initialize();
}
/**
 * SametimeClient constructor comment.
 */
public SametimeClient(int port,ConfigFile cfg) {
	super();
	this.port = port;
	this.cfg = cfg;
	initialize();
}
/**
 * SametimeClient constructor comment.
 * @param title java.lang.String
 */
public SametimeClient(String title) {
	super(title);
}
/**
 * connEtoC1:  (SametimeClient.window.windowClosing(java.awt.event.WindowEvent) --> SametimeClient.dispose()V)
 * @param arg1 java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.WindowEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (LogoffMI.action.actionPerformed(java.awt.event.ActionEvent) --> SametimeClient.doLogoff()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.doLogoff();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC11:  (LoginMI.action.actionPerformed(java.awt.event.ActionEvent) --> SametimeClient.doLogin()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC11(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.doLogin();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC12:  (AddMI.action.actionPerformed(java.awt.event.ActionEvent) --> SametimeClient.doAdd()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.doAdd();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC13:  (SametimeClient.window.windowClosing(java.awt.event.WindowEvent) --> SametimeClient.storeBuddyList()V)
 * @param arg1 java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC13(java.awt.event.WindowEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.doLogoff();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC14:  (RemoveMI.action.actionPerformed(java.awt.event.ActionEvent) --> SametimeClient.doRemove()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC14(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.doRemove();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC15:  (SametimeClient.window.windowOpened(java.awt.event.WindowEvent) --> SametimeClient.doLogin()V)
 * @param arg1 java.awt.event.WindowEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC15(java.awt.event.WindowEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.doLogin();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (SametimeClient.initialize() --> SametimeClient.setup()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2() {
	try {
		// user code begin {1}
		// user code end
		this.setup();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (CommunityService.login.loggedIn(com.lotus.sametime.community.LoginEvent) --> SametimeClient.loginDone(Lcom.lotus.sametime.community.LoginEvent;)V)
 * @param arg1 com.lotus.sametime.community.LoginEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(com.lotus.sametime.community.LoginEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.loginDone(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (CommunityService.login.loggedOut(com.lotus.sametime.community.LoginEvent) --> SametimeClient.logoutDone(Lcom.lotus.sametime.community.LoginEvent;)V)
 * @param arg1 com.lotus.sametime.community.LoginEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(com.lotus.sametime.community.LoginEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.logoutDone(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (StatusCB.item.itemStateChanged(java.awt.event.ItemEvent) --> SametimeClient.statusChanged(Ljava.awt.event.ItemEvent;)V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.statusChanged(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC6:  (UidTF.text.textValueChanged(java.awt.event.TextEvent) --> SametimeClient.textChg()V)
 * @param arg1 java.awt.event.TextEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.awt.event.TextEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.textChg();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (PwdTF.text.textValueChanged(java.awt.event.TextEvent) --> SametimeClient.textChg()V)
 * @param arg1 java.awt.event.TextEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.TextEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.textChg();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (PwdTF.action.actionPerformed(java.awt.event.ActionEvent) --> SametimeClient.login(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.login(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC9:  (OkBtn.action.actionPerformed(java.awt.event.ActionEvent) --> SametimeClient.login(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC9(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.login(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM1:  (UidTF.action.actionPerformed(java.awt.event.ActionEvent) --> PwdTF.requestFocus()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getPwdTF().requestFocus();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoM2:  (CanBtn.action.actionPerformed(java.awt.event.ActionEvent) --> LoginDlg.setVisible(Z)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		getLoginDlg().setVisible(false);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void doAdd() {
	AddDialog addDialog = new AddDialog(this, m_session, "Add User");
	addDialog.addResolveViewListener(this);
	addDialog.setVisible(true);

	return;
}
/**
 * Comment
 */
public void doLogin() {
	// Setup login dialog.
	if (cfg != null) {
		String id = cfg.getProperty("IMIDENTITY",null);
		if (id != null) {
			getUidTF().setText(id);
			getPwdTF().requestFocus();
		}
	}
		
	// Center the window
	Point winPos = getLocation();
	Dimension winSize = getSize();
	Dimension dlgSize = getLoginDlg().getSize();
	getLoginDlg().setLocation(winPos.x + (winSize.width - dlgSize.width) / 2,
								winPos.y + (winSize.height - dlgSize.height) / 2);
	getLoginDlg().setVisible(true);

	return;
}
/**
 * Comment
 */
public void doLogoff() {
	getCommunityService().logout();

	return;
}
/**
 * Comment
 */
public void doRemove() {
	STWatchedUser[] users = m_awarenessList.getSelectedItems();

	if (users != null && users.length > 0)
		m_awarenessList.removeUsers(users);

	return;
}
/**
 * Return the AddMI property value.
 * @return java.awt.MenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.MenuItem getAddMI() {
	if (ivjAddMI == null) {
		try {
			ivjAddMI = new java.awt.MenuItem();
			ivjAddMI.setLabel("Add...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAddMI;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G4DD84DACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E165FD8FD8D457352F6DA5296D35153E1A163466DE5B5254B6A631B77655661244A4A63189C9CCC292135A56C41BE08304342641C86291F1C4038A0A020A0A0ABAAA72C750A892C5C085999585919515E166GA3434CE466A0185A662D7DE76DB9F3668CB0C46F775E7778DC1EF3FEFB2F3D56DEEB7F5F7B1C11B2B60CDAB0AFA9C31266AD10785F2773A4E94C77A42951F3D7B8E2A993E28D126AEFA3D03A
	745C35E438E6C15854B3F106B4E9511994F84E03676A3AB8C3A65C2F105ACE250542CDGB95143A11D2A18F9FD4B29DA0DF29652E77371D438AE85AA842C81E894D01AF47DF89647FB61F9A93FA7B4AFC9122A9FA5F1BE4C4AD261B3F83CEC88AB840A21F1C69C4F66612170CC620C06EB4423ACEE94DC97D16DEEAB5D4763B5FF778EE95653D5C9CB08ACD57AC8A50FB15EA6FE4D11A229A166CB23DCBB61DAD65759FE50A9F7654B56F6997E4BF7DAAD79E6174BAEAB25257566AED931F54915F61B6CD024C90F
	919DF3D627D0FE50911E9B9EA7D858EAE217D4384F85AAFB9C75FCE1C99957E3C4679DD2798BF3668752B36CF126DF4463DEBDA78EFDE23EFDA2C97FA1EAF742178861A500B1DD965422AEE3A722AE3BE492B79A1E25A7E28DD9CFA07E060D600570DC8D5472846A7859B65431699F61D2C2EBFB5232GBA76BE41F49B7504D747686FBFE2D8CD4B4664B5443FD3A1CCFAB2561081348F28892897E8ADAD137F3EFA87DC8F37AA154E2EAE2763304BD5E1373ACFB82D329D6ECBCBA104E3E7E40B53ED15A4D66E36
	2C4E535187A974C95FB2C708656D1C0465E44C199FC90AF2A9E901CE5E463DFCB4A91C27B17EC9EF5E6A1EA2F6CBDDCB6CB685F04277A990438BA9BE62A9AF4EFC759F34AC106754C960275F211D1B1622AE266461D2DA11ADE9210EAEE10FDDCE8AF90669B072992FAE4C463F4CA6B61E84788C20C4200CC8A88FC08D11E86317D79777E7639A07A23B9DE6FBFDF72B4B6CD6AA3AEDF62B6C6636FE7CF8DF3656A34677C250FC4CAE230B55BE1A7AC0072EDD260EBE11640AE476989A69358B133D38B6106C5111
	7EE5E32970610FE9DD0908E4BEDCA870FBA99E254219EF0BA9CE1EE3A02C6ED9A09A7F8FD789BE6ED996FF33C867830AA7BF6745D9BAEF533AC81E9BA04C75FCAC2FC31675247D9BB6995ABD2089C0D3009200B2DE08B598DFC09F672CA998E0BD2AD37917713E36E695DC65DE45ED2EF1F8943343A2B71A5DB6F32BDD76C8BC4E1BEBC89EDBFD785E26755B82B20E498E59EDD6ECCE8724CE1AC8596DE1F162572413B8EE1906B6C05389823ADC92261B30E685310159231CF5D94D0A6C0D4142253524CCDCB3B7
	C20A10G5C773EC06CD5C65B5CEA38373E00368A5DC03088F80E92F679475A65F02D0542AD5BCBCB2BEC96220659FD9D4B687235F638C6C3FC530B310671C052CB3106F0206A28D843E4201217E38DE1C009C0B7DE01AB1075D58883AA1B82F10132DF0BB58C83CAGCAFDBD561083D482D48D548C64829A861478BA567D38A6AC63D5CBFEA8653D5C2EDB46FBAB664C377F1E1557105FEB4B78DE2A7B9840A301E200D227469A7200CCC0F620E1C0E300A201E200D27FG61C0A6A0BB50B020B1C011C0B1C0E9FF
	043E97288EC8819A81B48EA88AE8569F314F8FDFBDF69E530F58E8A9379F319D6ACD6C06F9A6366A2F5E93FB613D0927C37CC05B3F177D79CBF4B0BDA2BE29FE5DB7EE78CB5EE762BF3CA7FE9DC81A091A74086FFD521F424AC0B06D1E9E1132F4238F1D1A390C499A7B12F2DA22A31F79EE459A745D920E4F67E1980F7475243F58436BE8FFFA6ED45DAF103C6D78D2DA7F7C63278FB07FDB008AB458A72A7B8D2A7B5583CC73D34D73E64DB39963EE7F0AFEA3348DA8330F70A2FEDD2741D7826D52094F5A370F
	F3C89F1171A72823C0F5FF42B66EFF2F4D11E85BDFE17648585A1FF2C3C3ADDB3DAD9E0B7BC0B6712FFC8DC62FD532CBF6D86146435B5A8733095FF8BF506614300D1EC0F1B2AE2804065AA370A73353998EE928FB958CFF0E061B9545EDEB6DD664FAD9D1EC0EF6AF7FABD4970F4F10434373AAEDA2F96D00BC8E818A95F97DE29DA9D3581E1B1C4E4EEED7836929F83F30110EFF43A1FE441F303D7AB96D232741F3A2D056B4449FE0FDBDE0F90019843EDFEE8A425753F81AFAE1C41EFEBDBC93148CED9DD553
	829D0C4918FE350A73AE609871A329C3246EAFE3F626F5F4A5AF2F2B39EFC839A4FD9129E39BC5FA9F5174DC1057B02089C051C0E9EF40389E2885E8A850D820A9C0521BB0BE812A836A859A85B489A87ECD34F32CADED9E13B3D89DD13F2FDADF7FEFA2E61B122B44B69B3E02ED08DD346D5B7F6B445A002E75015BB0E53DFE9B7645FA7DB6EC487A3E5B28216B755AA896B6FCBD710B334721EA73C62CA763CD0B536110E943ABD8A436469057C072E1F35814F3B6EB3B2C545B3E10A529FCBAE93B6A6918B68B
	6E732663B831E7B30E93F33F783EB461CA056EFCB56CE766241069FC3CB45DBBCEE4BA5D310134F332DD6E82C3D5BA3B9D8A43FFC4474B9C774C2758CB0B4F92DEE32559D121B8724CB493796CD2A73B5B1C6EAE59EA3CEA3EE64EB777A87954897907E97091F23FBDE7572E03B9D5B6335D59DE14E735F9DCCE0FEC5C5E383D2810176595D24822CBD40649596EECEBBBD1B3D8A93E0BB1F9F61A9C15D5A4E4051FB8C0E5E9629287000EE0FC23EEDA9ED969F65124F8BA451EBB18DDE0FA558D4C576BE577B51B
	C5A6D2ED0EFC783FDD3656B80C96E797BCA85D1EFC8FCFB15F02AC79A692374F8C589CD5CE07ECB48DB019832061EE11575F947C20FF9DCFF5ABDFD5C9E73792341645DC4767EDDFB0FFA8E6602B2C4833A9F2D7BE790FA0F2E50759516E6F7A9A888F2C12072545D9CD01F8099AA5E82B254B4ED1BD4E5A2C8DC77394E8B07249FF0DE6FBF7A0A59AA0BC3092043B32231D1419BDDC46123DCCC6DD4F4D1731174B98F729D1150FC1D6A42620DB7E3C9B665EC71D16EE8F9171A95A6AFA3A224A47CD2B2CB6071F
	2FD4DC44DB7B187C4555CC7E294E2F50A48DC67EFEA6FFD67A051B50A6527AD0E5EFA7EDCB234DE303B12B7182EF98199C6B49AB3722DD34BACD6A16116729DB3441B6474D9585F6A5123C6D52591567292C43D66BCD148429D1B945C24E5103B63D363E476630BAFB725925526E74C0872F95F70E86765544B85DF2C53755FA5DE473A8D4EE0910FBF71B79D649D5F5205E7E7347ED2C1C1C113B1C57641BE8D216A04D9D36E136EDE43CF154E617CF887913B71031A8AFB99C6B3E1042B0DAF299D6F9092E1F4A
	CE9761E6580305A4BDDA92C4FA6B5692DE4C8D43CEDECB032B36A7E3E1FFEC345CB2FB2B6BCA8957EF0639FF7F1E02F1283F4987A40E57173D924E730BB713715AF89847C5824D180EF35F4C9C920EF3DFBE412FF45A6DEC2889E1E5B348B872EBEBB3D4E3434469ECDFEE29883F57A7BCE4868B1F8CD7961E1F2D97BEC3045F2F9B1EA0428B576905277E9943FF259B1EA342F72F578BAF91618F6806D70B70128DFD673FE5039EFF3360FFC3B75CA542DBF37ACE7FBBB9FA7CA102FF59C63D70B0919E2A9BBEC6
	0427EF528B1FA0429F528D0F926187B76B05C7C3B85B17FDE433FADFB6714F5C7EEFC178DB18461CAD6AB4DA5EE2F1C60A70C7376A050FFD8BE53C30CDCF46C4881FA252C8592117C63C88FFCEB7BC79ED8CFFED27BABC6BEDDECEC4786F0BF44B0188EF5E2DDB8E5E467A183C1134D19EB2ECF2D8E43288D5ABDF677B9E1FECDC2E892343BE311F32E2A319475BD56BD78CB7EC521F2B25EEA27B6E1DA27D34CDE4F37E9ACF134DAD471AC91AAE372D4B6C3ECE966478BE7B3EDA352DC3C0FF32A79F8E5771C00C
	5718CA42B45B5BD27FED712E14946C8BE0ECE30CA67292E4345BE4C8BF1A4BA34FCC9FC71BDA9FD7B48B9F815751C049B3E9996D44FD7F89BCFC8A3F46C73334D83C84912FEEA6DB476B1849620D19290E77109D634573F8A9FFE171CCFFD1477BFA17B8EFG78E820C9BCDE72BB6AF8C79C982F8C7086A0659D96EF2CCF3C94A7461B8478B41DF8CA8C0997A162C9B1AC3D2C98963FA9C61D5E9017308B8FA77128FDFC62EDCD45F8A93150368215477A46E3F2DD4BB15E90888F637148DA68F838C64522BF9EDD
	017122811362A04DB816DECB1CDA6EED99982F9770D0D53C31BE71762F94F681FC1AAA1E742EBADE2C081771AEDB534DFBD7CF6E58D5982F03479B4263C57824674944F8D10047G254673F2902F0E77E9964633463374EE447B66E3FCBC09F7D51C7DA8905857A8768E8CFE5A97601E7609B47579942B67026EBA8EED8B399EE96FE9777ABBF2C93A0500173F07ED5037B62957438FFBBCCE0B0DEE357276E47FE6759A8F438EEEDE8C57B61B5B2354B82CF2AF36C9D51B092EE4AF16433CDD29BB26F7FE600855
	8603E25CEE28E4231CCA317055E813FBF85E7FF9D4FD66A5E2592924CF82643D0167D9D165BD77870F70B66A1E1D1F8DD40F86E72553AAD7C3732A51C862E7F6E62CC53F0DFB8F4F4E48590845886CAD01657E953176F508B58BACDAE0A384E6DB0FD824407EA230643FA176038D081589ACAB87B1C5E0CF88EC0C400EEEC4EC06401E92D876AC44BC1B90EB9058AC018D93D877E644A64E423EE1EF8A5993236722480A0F2D35AB3F7BDAD73E39950639E07C52529332239B26345DE6BB6DF550469F5034C89A09
	33704CD17596523F153C8F758D487ABE4A786342DD7D4BA0CBB9BAF2F6EFC51DEF3C0F79C8580A324789EC1191311877D11F335B09BE39FF07BE9F28616F9877508ECC53AE3085BB11BF7C6F28774CD51B7AAD13B596B2B8E7E9246511B4C83D18AA52DD3E9BE5E5FC00587784E67AGE57DF6C5865A8867992525C749F98B467313DACCBB64834CDF2A196EF141F394D08C90BBEF32218D4F0FA5A7C05E93D0C64B66E2359F822D6E1516EA07833C2EDB0A312E07FE713F2416BB6C816B3A12406A780884EFDD2F
	9A71E4925343D33452BF2FECD9D9787D6EB64CEFE48266774F749CCD726CD8C3B6D049EC4CEFFBE7AA771D893090A0B6FEF90E626A65E0A67F1B79A4EDDC86E6F97B490AF22EFB64FD432532AF8BF54F458DDDD61A94B11B65E946ECEF5EC617BF199481447459E8C7FD8ABF04B14B07284FD0BBBDB7B638C5E55EDEB76E5903E9843BCEAB61F9243704FE23C037A9C23F93DD7BB47A8533204C744B3C301725B10805E4546F1EAE54AFED8E0C69676018FD38D5BDE69F82F8B85024B9287FF287692703DCF466F6
	8DAFA3E795873E5A0C3ABA9C286BD450A3A391F55DDC2C565584388BE8C4A26A7AB255B548F5E32EEBDE52E24E4B960CD117A2A76AB29A64CC933AFCF4DCCF172C0F307E7C1972913D72G33FE04BA1ADCE41DAF7885A89CDB3CFF0C54A14D52B3EFCB6EDD2F2EEFA966F33A75ED584C7DC9A3BFE275EC62C72A7AD683752D866B5BAFDC186F540FE38DD59FE3FB774F4EDCAC4F7D2C8633F4CE25E2BAB7A00DF19F237DF28A54760B81BCEDAE34BFF351CEE54B87EBA7A6774E65A8379A529CB297652EC95713BB
	FEAE666F930A7BAEB9E37BD930C20CCF66221F7F328265A4CBF106B2C2D44EFF1DD34BD1G8F830AGE279BB1D71554A419BB652CF28165FF83E6F4BC0FDA6032C14F928CFCC231EBE65904E52DB69DC0C695175B534E36BCACC2F81628E93697D7D02B63D099096AD527BC9F38ACD0F2DBA3334D62D423492A1DEC9925A621F2B48DAED304B11AC4D57D6E1BD33C3FA61A24D724C412449F43FBB135AC2ACA523ADC6E60AF68964E44CC7DBC4DC543305E9BE6AB2BF6B2B795A331879DAACB7F3FDDA32D01F9610
	95A664BD15D5204DFB7F4B2DF85EFB37FA5EB5E15A4900732E49A00F76597C6A1DF74D20E3C9A999EC844466CA0FECA66786F05EF586E69850AE5BE5C91CD148A53AF74A5779736739C4AEDD2F11F01D374CC86CEC04B42B001A01942091C2C6C2EE3F67360F7476F1EEFB665AE04EDF0F83390C6FEAF6B0FC13845FBBC171CD95FC76F54170458B3E5820781297A01FE3FDB0FCD9026F5D207872845F488D4170158B3EF5B94170B5883E2703626B90FC359B03613BA178A203628B95FC3D1B02618B97FC330362
	9BAF783E589C8CDF2460CB6C13EF5A02B8F146EF963FE7E77DA368DCB74590C74F7A4F937893944FD0612C7DBB398567E4B99096E2C0791FEE9D285E5186A61F1F576B13AF516055BBED211AEF2931AF3E5C05DE3EFD8B55797D9D1DCB1B96EA737BA2451B96EA73FBF1BB66578AE11396E2FE2BF68CB43FF9A9EA3D976F6C0B2FBC452BF7038F5F4ABCADDF07AA6E8D55FDA85C0727201E193B03AA0702AFACA83EC84177F37ACE4BB415BE33D477A90B3C770432611959FF88DD83A8DC446CBFDF7865DB94AFD7
	614CAF4B4DB886290330F10BD07E1636413D87D49CB49F6B9F6F5CCE7A472C45B03682B281D901C296E37FD83105245BE77F086F31700E1169F30F1FBE610B3D369B4F6FA379F55AE23463F97A6E4E2C45DABBDA58BBBD1FE86D780E8D6D1881E13D1F209D3BBA357227FE626B3B844DB3637B079FDF3E66B9BB55170F59715D9DE4AD3B84426A00BA00C200C683CD840ACEC5FB8E5F22373E6ABB5E8834386ABD7B4DF45DE69FDC9E7778712D57BC27AC51630B99243C8F7B151723AB6FD7DD031377089F1FD65E
	BE0DBCB6E65E102C339ED65961A4ABEF382F7628D93D2FD6876910FD8B97DCC300581C6FC9AB4E79C6AE417228B88617172F7B71E94BE314EEDE662E4C724F8BD941B8EA136DD616179FDE5566056CC94540D5DA0AF939D00CF949DAAA7ACA676072F2440FCF1B173A253EFCCC0712DADC936E90BA3C6317161674F5185DAF5F2825FA753BAD0F546F7190968594831432AC4E1087D48DE4DF0675FB5A96F296F6A0751B4D5A7CEBB75373FE5760EC7C109F1F366C8FDB2647F7B6F5F072ACFEFCDAF9614B744A67
	0B25BAF52D22DBD168999BD6BE276D5316CF32DE968169CDDE066573DC81160D68E5D8B67EF3796072F22F9F1F36FC662469154F536928433EB45421E485C94B25095F97B13E789503537DE3BFBE2D6EA1E9FAFE082B4F7477836E83F1BFFCF2D66D071110CE8450B420D9E96807196750862969E803F199034B4BE3FEFC5A3CD4256B79E173B931E7A8F468D8B9B89D2E7971E9F598215101592A773C1E2D46C05C8969E82BDD97D14FA9C24F6CD50353F3079F1FD64F3465FAFCFF726353123E3C58FE790C3A72
	FE12B9387C0D756353662FFC39DED9785BC5AC0FCD4B5146EDD90353C17163536A903ADC2F4F38FB9751E1B4040DDF0E7DC359D672DE912EE955B9ED648890DF3F1A39151CB7F23AED6DB687E2F19433B85D748598FE064098785D1CDA237E3BB9270D7A6F661CB3767DFE6195E320F7F7583B00925D3B1F84791B8144302F89ACC1E0C96B90CBDD01583F89ACC7E0496B91AB9158ED822B9618E183E24D82FBC0E0AE011564A096A230B78496A630560D080D9158F401CD905870CD08C589ACEDB3E251827B2E40
	928536021EADC94B08B398B3901BCCB193BC37E4E0B9FD0C3C164B4B5EB32A7B06AD413C4F98AC71F953AD154172FCF2AB6659AE6C10310DE03D70BCCCE01737E13CD1825BE2C49B0E91581BC60CB7D95870796DDE3BCDD15D1B375FFA9BFEF1CBE530BCDF5C01F91EAA6C30F1A75AB0DAE0EDBBB1DE2240726879081415D08ED7A2D61D0FF6B5894CC647D6AEF88E9158B7A8B68A1EA789ACFFB7167598015DAFB0E995E28F53F1FC46AA56A7B26CA93A67E3842CCC44DBF299F5E991580896020540F358AA7471
	6DE6F2DEB3DCBC073267B9786EEB1679E67901485077F551CD13B1DF87E3ED700F3787EE6FC7EF57EF6F6F5B2E5F5E0F5B5EF7FB9F313D6F767E31B674D704704D7C8E7457B401655A88161C99E7484AC42C0BE2F970DC1E09BE3BF215784CA41EED74190C735973FB361BDD1708ACDF9FAE3EFA33E528FD390EBE7FEE55B2EAF70FC7765089E015D9B173303795B29772FB1F752439CB1644BB161D0BF81CA30A33F23770576C9D014B0634D33FEC98F612B10847596D3648DA7FAF5919A5423CF3D3B299A06A30
	B82BA83FE2F6374BFE65E79D65E7E10178376E8CD446D8DEAF5B55F9753EFB3439CB0DFB5F8D0A764149399CB637F94D28F3162B4E8CA3AFB6C61CED966B8AD0A658592657ADE4BDF194BC0F871AAC4A65B3563E463D51197E6D83536D9E07DAB7F2A60749FE71EA8AAFFF09C2764C53745CDE963441C056ACD1C70A7B12FDA3AB10EC07D3AD7BD3D15E7753B56ED09DBE5A5685CCEF13CB155E09A261F3D7DE60B2581327DF867F1997388C066475DF863F1D97388C0E486B3F8C5E1557F799FCCB1D574AFD829F
	162A46778BFFE66D4732B4BE8B7DE94BA77E0C07671455B046DD0D7EECAE684B1F7BD6FB6DEF6277CC76AB4B55765FAD7C59185ED7FAAD2A7494FE4F5A63DAFAB6E5A8E0E12B719C40360C452A7C1177A679591195AB7C6B92D9A71024B564DB08B1627D07B11056C4AEA7FAB5DB9FE5B67A71D91C77D62FC19B6DE9A4B69A824FE1C0E357200D624E751527C9EB3CF91A3AC6ED23F7FC75AFC29B997BCCCFCD71BE697D67CA1F74F6233F471E97E70C57E2DE8EDDA0F9A9A34FC0763518175D9787AABBE42DDAF6
	7DAA9F5945082F4AD417C16FFB782FE57A44AF413CA774A9BFEC2D5716E3FC645F1565135E9E2CDF776CA2FBB03D223E5DCF1F2FCBD8D66443CBC57DBB623072C9AEBB371FC967061DA0606CBC4442A8768D6878BF1790DBCD6706CBE0727B0B79087D10E20BG7BCCE0EB695CF0A724751BE444C6D26C37C912746C824456EDC0AC5D005853943B973073822BE5673FA13D6D8B91CB2058BFC0662BC23F6BF4EE5883583D827B10E21F8376B311373B69FC71E7A023BB8931EDF4EE78A3F8AE9258E80AFD83F81F
	1F07F67CD58FB9435366B6F7C153D46F12ADD2C6B629EBBBF2312ECD607E0A6257D9EB319E3FCD4F42584D2DB279FED9B37001C452E5727B07C9B7497D3CF39BA9A73203EC62D925F1D4C6851DFB913F0E02E7467386693E388EE5C654A1A11B49CEDD472EF96BB07E6AFDDEF98AE9AAF95A47F7E25AA691777ED2C9149FE78BF92F2B5DEDF6F558AC1EAA59E3F15BDC0A939A7804F5043F12366FADF0BF92A892A8E61D378CB37D2E6423FE656B21BE82A9C0A300462D4773E677972BED44ECB124C06FBDAC967F
	E49B5983E8B5DBBA5B5D4EEE0775181F06CC3F7FA8A03223C04EAC205C8D3E7AB1FF9F2173231F027F3FAB4A4013947BB1BC47A621BEAF57925FF4C1C3DBE1F6F36C0F4D862A77F5E7B7D9BC226D6F7B4D185FAA10573C01498B59405ADFE6135C4B98E7A460E301A68345832565E03939270564D531A9741C9573CDEE19372C9CDC1FCA6D63D0C8A7CF86D3CC7EBB62FD33429C2F7C6A9C362744642F6940B8AD00ABC0A3004681C5897987ECC4FE1753EA360B72F24606ED6DAC91AF44662F67314F3CFAF69FDA
	2251133413FC2D5C2CED8F13B7FA7D133551FF7C437620CFDAC95E73B6EA77261BA8DE36D13BB7BD4D02FB53A6889B3BD12CD7D8F13E1431897B08D72FEAF5AA5F4474E800EB4726C0BADDBAC3E45C5844E4FFA270CE0A0FD461CC27F7699813BCC7C0D84EE65469DAB16A94A230BABADF0F0267E8015DD90B7192B70BB3D47B353A1BF23D7A366486527D8FF4FC2464B29D9788BC1A62C3D5B8535D190FE797C7C2183485F5729420CED6017DBC0DE06360F912403A52B1DE14409CB60C173B954BD66B8AB28705
	6E2B08153F5E9558DE95C29C26CB06894F55D481F6E3AB36A95FB2116FFC6A0C13C8751558B861B4659D87BC11C0B30058B94A5E2D78DE47183B07CB2617743FDBBC2D61D4D262D6FEFEF21B779CE554779F617E387B6CC0479B4D5B54E70BFEC147E22EEDDAFF0C23F848B62DBF8EB422BF42A0ACF19B5AF4C19331D70B916A38D1E067514EC385F6689CE2A30CD816FEFDFE203A0FB22AF5FF000E3D4699353ABFCC71C9C62D6EC7AE08F33990D63E9DF52A3908BA058BECD9B366E72C409A1AB15E446D382FD3
	170B65E4B2E0A9BBC85979D72E7A1CAF19F3F4C9EC7F00050F7589A77ADCCCE2612CCCBC33854BC462B3F7C976DFB7867C66F65D8EE68F05DF2B075F1897B553B51F25737CC575995D349F9ECC1A97A01DB11CFF7C8EEF59E27562BC7DCEC51B596E1105FE23FA54696EDB5C90706CEF8CCFCF5A492E63A65C18476C56EAC43B6D5B09F68BB5EA6DA64FD35B6DB12356EE755CEECCD773CE352EFCDDA10F1CF16E73BD98ED47DF34D7B26591F9DF6611F798B6F2DA44092E25014E09C064BEBB8F5B101D79C43FEB
	6656F6DB1B2759AA37393A3FA85A1B8FCFAC7C88D1155B7062E274713029A3240C70D581FD9C1A47ED176775CD47265B16B0BB5E160FF60C49C3BBBE102F369311FD58277C7DB9DFEB67C373556119BE6FDCAC72632FA9507A6171E4359FFECB434591B1B1F65ADD426C7AD28131EB91A734AB59BF4B5D95E7284BE776F46523DD6FAFCAD759751A593D3B0498D542FA3D6E92364B2300E7CABE364BEF6513390A763C0113FC5F434486D22CED3EC079538A628CC62072822C5B47AF23ED1B8A50363D173536FD55
	47F63F3C2C356DF69F5BD534E8ED7B3CCF99D7DA3436C5FE1657956D1857D022E7814EC36BA8AE95469932008A8BB18F659D18076AC24C0323C31B07ADBEBA0C6A50664139C09D7EE207B68F6F7970A75B34F92814546543E6A3FD2D626E16D93B3A3295571707940ABDB78B765B610558CFB4D8895FE471FC19BE13EF89306737ACDFE5CD17245BD7B813B177AB4950DB6FD7D3C2A1315FECEBCE9FF1E6942A57F3622E226D4A0B445E0C133ED3834FB784765353E84F50A2341F658C71D384BCCF861A8114G14
	3A9B43BF2761B970DC8E54403F33C05E03E2616F1FC6DB909E3F3C9479E313F5B03F7CC11C88216352B3A863931D380BF4B03D6F366A791278E274EEE26FEF97D7F13CC5A79FA49E0E7169FB6390E7A850CAAEEB64EE6F79EBD63E5B69F8D936F4B8ABBB4CEEB61E7C974548B7A063A1BE13BB369665CA457AF25514D16CAB57D86C154B773D77E3D9A8A9C63F5FD70AFEEFAAC61BCE27FD46E8F80E90D89C45F27837AA98561D9FCCD90F50490316C62B62B0995F89CA46C0FC2B2EE34C4E5FAAC0BBCF5651D16D
	BBC2C3D57EA5780CE22DFF234E7A2F33CCBFA489F9A169A8AFBE00DF7B1217DC62154752B6106E174B9E3EC2BD46E1B6DCE39A5C79F1E350FC7CBD8BBA17C9AB510E3BA7D3BC37C4BB6EBEE742F177BE889B89444E4A4CBCCC568624BDF106EC2092A093109DE8689EBCBB731D4F487BF9FD1E2DECF03ACC72B5592E5A5AE4E57F2133B8DE9F39874B797D0D346C43F304409E249879268A797E8A438EB7EA4BA5093F147386E33340763F60A7834BF7FF7D44C00815176CA67FF53E62A6B1E75903EBF1F712AE1A
	173788D2FCF91B92A966F0B3043DFECB3FC9978F4F49FB911BC8B1723D99726D977E5E5385F57EC85C781BE0BBDF9BDAFDE4AC38C936C362EBE1C709BD186D76B5236D3276226D0E9D1304BEE7F3032DD3ECBE7068C21C8F0CFB708752785BD7857C3EC35EDEE6C3933FCE7B760DF9644AFF57241A54299B90968694819485948DA4FD0AF56A154F787B9D64F39A079545EC6968A2ABE662658E1B5C630549A2B4CB7BF672E9C13E7E1FFD109CD2EAB4DF557DB247F198EE1FEA3DAADB1486F33B504DF51C1E8581
	BD8A05AE2D87F786CA8740BA3753A53B156B8C25AF6AF3BB377779AE159E315F6A3AABEF88DCEFEFEB03FF9DC3ADF7068E39734ED5C3DBABD2064E2FB48C35D4268CCD2AB08CED2D4A11CAAA2594CBD5456E2A0AC5B92DC7FAB2BF2F2AAA349C3B6E6949A849E9BD565353333C3550F2B4336773FA4950DAF1BAFDE5052143D23565ECAE24533A1B7C99061A29EFD78D85E1EDC49E7E4D7A140E2373F01CDC874FE40EB975D36EDBBACF6A5C251EFF4E173CF325FD7B628CA17B3CF50915218DCB5473F27BF3BB12
	D684A8C3611CB70ADFF343EE70F7F2FFCF7774D27643BC82A88F288A2889C8590FBE7B45C1B2A7B96CEABBA3338D5B93E607391DFE89893C6FEA2B6902A77592BE77593772876733778AF2C8A624F96974AFCDF31FAE7E7E7F388FE087D626CE96E2198A5D4F4AD4F6293ACC3DDD281EFB2B4BD489449BD52A9D1FED3EB43831C5D150FCEC8C719C1D0BCFA8553E6B78AA45A3CB356FBA3608397F9488ABBB007D51294B0353FBF57B607836854D4772B5114E5BC79D506677D90A0FB9204DEF23187F0F07306CB2
	4C6F110EE06533BD1C032D38BFB3240C6D610441F58C90B9D3476623F7DBF27AC8E7E219FA7F78F9BA0F402F10733DEB3A17D66F6CD6BAA4EC2BFAE46C6F326F891532B7ACCFCA17745B2AA9BC7D644F3C6BDFDE7DB3BBD17FFD90DE87548BB46CB3765E88DFF7235F2C706E61E1DFFE094E1343A16ED8A0165787CF8FBC2F33F611BDB993198794A1362BC9E03B912B39CE72CF3FA4AEF85739683839C70DD55889AFBD2CD4045FBC3D7B0CFAADE58A4FD742E7627B9A35FA612987F17D6761E2BC2312835886AA
	875AF7897F628F79E3B86E79B579B4B177579B29EAFFD53D3AAAE9F3GFFB59D64636403DEFF054F0ACFE2F93C2316DC376D58464FD43CA15E731A96C0BF260B6514A4FCFEE9BF7ABC6B9073F9A1DC2B00485A841B03BDD10AF33066C37AF3BEDC3326EB0D90A7649013CF77B68EE967FC6EE60253AF258B2C6D8871977BFAB91E9179EF71EED278A19C9FEEBDCDD4E7613F966F8DCD9561B5E7C8B8BFF3E622E32472B803319C6B76AB948B635F8BE158A553C0674DA41D7E62E4E8627077E186ACA358F9B9A1B6
	16786B61406748E69F56BFC7B677307EB9578595FD7F6648120A403FB912D1C172003FB9427CE22F17042F877AEDEE693CFAFE4E52995E60CDE7205F69BE552CCE070D4D2E1C25E79B41D7CDC0B700C201424BF1DC764DE37C1BF9BAE37AA356F6F22E0E7C8A21027630D787363D273A7F5FAE3CD1CD5BD52722B83BC87A08FF3D1A58CAF13AA84830EFD4931F39ED6D9D8A0B4A71EFD7133C5B65B68AB32C7B78D2359F59309FE5526FE9096F4A51CFF256C3C4C7BB9BAB4650713D7AEF88G93681FA45DFD7753
	CF4747CB525C39F366106BA8788B8FA7F1489F0BBFF72EB77EDC7AA7857D477A6A7CDD58D7CFG9FA514631E2FFC83476905673FAD955E39B260DC2F70B05F6FBC6C9D2733FCFEF3D7B9DC7F19A0C99FA5CAD28227399FB37D7D086009DE7AB2016949460C776D42BE6446E136F792466531F277CAA399B30E85ECA25094209820648A98FFG65811583B5D7E0B914EA0D92BBCF63F460F91952524A76AA19EC2F11EF207242C6A78A0CE7C6ADD94BF708331A51356A6F7AB0AC361614B7B71FF454D8917F9BBDAF
	E3355B6969E97E0D1F5AA5341CF8E407874A4AB59A9D5B0F5AB45FB0DA4218DDBB8A07C85E72006560FF7A0F151FDF96E27969855B0E2D405F1BDED054825784E9832589500A5CCC42F4D95958AD3E659DDD414AC6F2A5AB9B2C0F08A2BFF7416F7F203AEF3BF46B5F397972FFC046536D5EBC3D243AEFEE3F75323BEF298CD6465ADA310CE503DF9BAAF15CF8DFAB2EF38D2B44BD4629B46EC4F81E8AB42B9277E79F3750F110CCFE6BD87C56C2D38EDCD32BE09C83E4823282758205820583C5D4E1FB71DD93E9
	AF822D81318DDB5AF7394DB6074274BE54A966FD10CE5A915C73ADEAA16775B4FB3E475CB6EB05391DED7A327CFD23D36C0B9E417C7D1A26B9841E4300469E417159550B1204FD751D27094E627BE87557BD0A5CD56934BB5D7C8BEA789E42DA1D7790683400497F43999C87CEBAA25E91B6A1A69D45F15E63BE6F816C835CF4346F719C333F27190CFFDBA06E8D20D1C06301A201E6GA5G259E0BB364G6D832A83328275828D839A89B496E862B1745107A7367761A3EEE02F13C499FE4B67772227C0FAB147
	7A561F7977367D68DF299AF42CC69BBD3B9F7D662AC63F4D21F1C743738420A9A26E5FCB511E7155831D7B60FC63764B124843841F337B469A18FB558CE42F78C11FB37AF540E36D070F6F0F6B7CB60C6FEF3EB01F341F8DBCFEF31C6DFF7C56C377C7E498F7B5DCF771FE7746D97ABEF2DB1BC79663442F1DCD93D80D274EC9BACD2703FF73E0576056CBAA0266E3653A718A29D73DE047E1C0E300A20022EA301CAEEB4C1174469E744B6B32354EEC07D9816F6BA76DCA133CFFB856E365AFCE0C5DE2A06D5C63
	187E1B0D44B7BDB6ABDD4B603F575DC8EC56A11341ADE2B1B49E0CF4D4715EEBA463BC0F456C305B9CF21D594A718F68193A566B0A6C29135DA688E378C70DE4CCE4B5ABE676BC6F9C311D0BE5815F6BBAC772GDEF6F8788BFE36DE594E67BB1AB04B7593E6CFA7FF473EF0F0FEFBB8E8BEE6EBD3D1E0DB3B0B50564DE067914745778BDB872763970364FBA0E8BE36D6D7C74F7CC69E572E611D277814635AB53CB7C51FBB83422AEB31EC9DEC8ADC1F0FB475DF1FCFB6694F479A1A7C67E3671B7467E3D71A7C
	67E3D61E2EDB3C2048702BCDE40C4D4E2433ADG6FDA7F913FEFEA8D4C877503649B96B49F73513B749B52E3EA353ECB207878DA2D6F7EDB0CBBA6C2185104E5754DB3FA720719D8FBBF4A9468DD625D3AFB7063F87CC9BAFCECDF76F53A2EB7554474E3581FA8B60BE3FC5E5D9C38CCFD27397FB27503E67DB2F5D733FF197AC933FE199A5D6CDF266E256B9B6DB0EEE892717ECBE06785769B1AA6414E7934398FD13D88DE6D536EBECE756A21D89347A62930739CFB163ECF81D96EF00AEFEC3C58CC5A5BB61B
	1D371F2F50B8E41E2888FB7C1E6AE8F319D5FACF9358F9610B0FEA7D7D13E4D27B07797F5F7D4E518F2C3C5FB9C83E970366E37541D9CA4FFC1C505613DE0AE71F505613F925D8CF0C90B66C845613B925EA797100A71F6CFBCC44EC77EA013FBD2796286D493097527D633D126EDFAFAEDF21FD3659E1350BB2ED39C25EC1A27D7099596516BDD0D558CF3E70704EAB24FCF8ECDF70B26C3C227FDBD35DD7C85E1D1EB347AA0EB89437CD76303C4F9A64D8A9A968FDD34657DBB4B83E5B8749C7FFBE105FDFD15D
	C7375E7A39723C2FF4AEF3E0B25EF7F87374316A7E514EDBAF7B75DBAA03551359F4CE1A857551F8D2FC0F259E4F8F16882C460471C28476CB13B8DFFA926762662D249E7035DA5AFCB3BC3BF7099747669B57BCCA3DF67D176AFEE1692D37F14EAD15416C347C00FF7B14F9C05DBE3179DEDABDBDA38D1DB31B0FCEE9A136E0FBDB5D753837B5CD276D8CF41E91776BE61D541EAF1CE376267D28C91CC9BD251F767CBE524EB865CD1B7F16CC3D58FFBC056BA96BE95B40427FAA56BC1AC4786DD62F5F6F29D737
	C52190A7DCC7AFFFDFFE60B32E9A8FBC117D7071EF1D547B7B6729FA7FFEE669897FF8ABCE286331F94F84E5E8920CAFE325850A14CC26740A34006EA2A912016D9C418D1B56434DE12BB5BFBFDF1196314DA0FA1FD9F3A2274D694E2912BD36F6C7CE3D535ECDBAA50FA225C088CFAB69D4A730D712A11CDD153290651F3047ADAD934BD8B5F40CB36DDAF1697C69BF1D1FA4A557C886B6662B111249402DC6DAC047F5B552FC9873753A384F489F9907AD76FCAE7D0B159A95AA8D9025FF42BC5C9A20DF065EB2
	5B41FF35A8798FFF0FD83557ADAD95D1E8603C1FE57EDB5A70626EA4A96528E4E8B35BDD9DE6D01DEEA31824CFDAE99E48E2A298A90D7EACC9817096D05E83A6A94982D6DD6B45AD84E72175AE33C506A80B2CE6F7A7CD0164A2732234284D5D5ECA850097AE9E3D88E2699389DEED1296AB9DB2FDA335D781D7FA132EA32BE4BC60G35A7AD73AE7AA7AC34D8CD6070339E591DD3D3D58A0E2CB3FBBCBDB0A5AB95119720017D9C02A85F4B5F7E257A1CD842EDFB823E3F15D34F6ACCC93DF7AF1F2D43BC51C34A
	3A8B70E175B8FFDD59C3FEEBAC5019407AAE335D2E186D1D079DD6F2BE30022CF7C8B836FA3A07246F41B8BC10053D50C3743E2A6279BFD0CB8788B7E3B4C215ACGG5413GGD0CB818294G94G88G88G4DD84DACB7E3B4C215ACGG5413GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG4FACGGGG
**end of data**/
}
/**
 * Return the CanBtn property value.
 * @return java.awt.Button
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Button getCanBtn() {
	if (ivjCanBtn == null) {
		try {
			ivjCanBtn = new java.awt.Button();
			ivjCanBtn.setName("CanBtn");
			ivjCanBtn.setLabel("Cancel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCanBtn;
}
/**
 * Return the CommunityService property value.
 * @return com.lotus.sametime.community.CommunityService
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.lotus.sametime.community.CommunityService getCommunityService() {
	// user code begin {1}
	// user code end
	return ivjCommunityService;
}
/**
 * Return the ContentsPane property value.
 * @return java.awt.Panel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Panel getContentsPane() {
	if (ivjContentsPane == null) {
		try {
			ivjContentsPane = new java.awt.Panel();
			ivjContentsPane.setName("ContentsPane");
			ivjContentsPane.setLayout(new java.awt.BorderLayout());
			getContentsPane().add(getStatusCB(), "South");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjContentsPane;
}
/**
 * Return the ContentsPane1 property value.
 * @return java.awt.Panel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Panel getContentsPane1() {
	if (ivjContentsPane1 == null) {
		try {
			ivjContentsPane1 = new java.awt.Panel();
			ivjContentsPane1.setName("ContentsPane1");
			ivjContentsPane1.setLayout(new java.awt.GridBagLayout());
			ivjContentsPane1.setBackground(java.awt.SystemColor.window);

			java.awt.GridBagConstraints constraintsLabel1 = new java.awt.GridBagConstraints();
			constraintsLabel1.gridx = 0; constraintsLabel1.gridy = 0;
			constraintsLabel1.anchor = java.awt.GridBagConstraints.WEST;
			constraintsLabel1.insets = new java.awt.Insets(10, 10, 5, 0);
			getContentsPane1().add(getLabel1(), constraintsLabel1);

			java.awt.GridBagConstraints constraintsLabel2 = new java.awt.GridBagConstraints();
			constraintsLabel2.gridx = 0; constraintsLabel2.gridy = 1;
			constraintsLabel2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsLabel2.insets = new java.awt.Insets(0, 10, 0, 0);
			getContentsPane1().add(getLabel2(), constraintsLabel2);

			java.awt.GridBagConstraints constraintsUidTF = new java.awt.GridBagConstraints();
			constraintsUidTF.gridx = 1; constraintsUidTF.gridy = 0;
			constraintsUidTF.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsUidTF.weightx = 1.0;
			constraintsUidTF.insets = new java.awt.Insets(10, 0, 5, 10);
			getContentsPane1().add(getUidTF(), constraintsUidTF);

			java.awt.GridBagConstraints constraintsPwdTF = new java.awt.GridBagConstraints();
			constraintsPwdTF.gridx = 1; constraintsPwdTF.gridy = 1;
			constraintsPwdTF.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsPwdTF.weightx = 1.0;
			constraintsPwdTF.insets = new java.awt.Insets(0, 0, 0, 10);
			getContentsPane1().add(getPwdTF(), constraintsPwdTF);

			java.awt.GridBagConstraints constraintsPanel1 = new java.awt.GridBagConstraints();
			constraintsPanel1.gridx = 0; constraintsPanel1.gridy = 2;
			constraintsPanel1.gridwidth = 0;
			constraintsPanel1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsPanel1.anchor = java.awt.GridBagConstraints.SOUTH;
			constraintsPanel1.weightx = 1.0;
			constraintsPanel1.weighty = 1.0;
			constraintsPanel1.insets = new java.awt.Insets(10, 10, 10, 10);
			getContentsPane1().add(getPanel1(), constraintsPanel1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjContentsPane1;
}
/**
 * Return the FileM property value.
 * @return java.awt.Menu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Menu getFileM() {
	if (ivjFileM == null) {
		try {
			ivjFileM = new java.awt.Menu();
			ivjFileM.setLabel("File");
			ivjFileM.add(getLoginMI());
			ivjFileM.add(getLogoffMI());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFileM;
}
/**
 * Return the Label1 property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Label getLabel1() {
	if (ivjLabel1 == null) {
		try {
			ivjLabel1 = new java.awt.Label();
			ivjLabel1.setName("Label1");
			ivjLabel1.setText("User ID:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLabel1;
}
/**
 * Return the Label2 property value.
 * @return java.awt.Label
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Label getLabel2() {
	if (ivjLabel2 == null) {
		try {
			ivjLabel2 = new java.awt.Label();
			ivjLabel2.setName("Label2");
			ivjLabel2.setText("Password:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLabel2;
}
/**
 * Return the Dialog1 property value.
 * @return java.awt.Dialog
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Dialog getLoginDlg() {
	if (ivjLoginDlg == null) {
		try {
			ivjLoginDlg = new java.awt.Dialog(this);
			ivjLoginDlg.setName("LoginDlg");
			ivjLoginDlg.setLayout(new java.awt.BorderLayout());
			ivjLoginDlg.setBounds(33, 695, 248, 146);
			ivjLoginDlg.setModal(true);
			ivjLoginDlg.setTitle("IM Login");
			getLoginDlg().add(getContentsPane1(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLoginDlg;
}
/**
 * Return the LoginMI property value.
 * @return java.awt.MenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.MenuItem getLoginMI() {
	if (ivjLoginMI == null) {
		try {
			ivjLoginMI = new java.awt.MenuItem();
			ivjLoginMI.setLabel("Login");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLoginMI;
}
/**
 * Return the LogoffMI property value.
 * @return java.awt.MenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.MenuItem getLogoffMI() {
	if (ivjLogoffMI == null) {
		try {
			ivjLogoffMI = new java.awt.MenuItem();
			ivjLogoffMI.setEnabled(false);
			ivjLogoffMI.setLabel("Logoff");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLogoffMI;
}
/**
 * Return the OkBtn property value.
 * @return java.awt.Button
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Button getOkBtn() {
	if (ivjOkBtn == null) {
		try {
			ivjOkBtn = new java.awt.Button();
			ivjOkBtn.setName("OkBtn");
			ivjOkBtn.setLabel("Ok");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOkBtn;
}
/**
 * Return the Panel1 property value.
 * @return java.awt.Panel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Panel getPanel1() {
	if (ivjPanel1 == null) {
		try {
			ivjPanel1 = new java.awt.Panel();
			ivjPanel1.setName("Panel1");
			ivjPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsOkBtn = new java.awt.GridBagConstraints();
			constraintsOkBtn.gridx = 0; constraintsOkBtn.gridy = 0;
			constraintsOkBtn.insets = new java.awt.Insets(0, 0, 0, 10);
			getPanel1().add(getOkBtn(), constraintsOkBtn);

			java.awt.GridBagConstraints constraintsCanBtn = new java.awt.GridBagConstraints();
			constraintsCanBtn.gridx = 1; constraintsCanBtn.gridy = 0;
			getPanel1().add(getCanBtn(), constraintsCanBtn);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPanel1;
}
/**
 * Return the PeopleM property value.
 * @return java.awt.Menu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Menu getPeopleM() {
	if (ivjPeopleM == null) {
		try {
			ivjPeopleM = new java.awt.Menu();
			ivjPeopleM.setLabel("People");
			ivjPeopleM.add(getAddMI());
			ivjPeopleM.add(getRemoveMI());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPeopleM;
}
/**
 * Return the PwdTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.TextField getPwdTF() {
	if (ivjPwdTF == null) {
		try {
			ivjPwdTF = new java.awt.TextField();
			ivjPwdTF.setName("PwdTF");
			ivjPwdTF.setEchoChar('*');
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPwdTF;
}
/**
 * Return the RemoveMI property value.
 * @return java.awt.MenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.MenuItem getRemoveMI() {
	if (ivjRemoveMI == null) {
		try {
			ivjRemoveMI = new java.awt.MenuItem();
			ivjRemoveMI.setEnabled(false);
			ivjRemoveMI.setLabel("Remove...");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRemoveMI;
}
/**
 * Return the SametimeClientMenuBar property value.
 * @return java.awt.MenuBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.MenuBar getSametimeClientMenuBar() {
	if (ivjSametimeClientMenuBar == null) {
		try {
			ivjSametimeClientMenuBar = new java.awt.MenuBar();
			ivjSametimeClientMenuBar.add(getFileM());
			ivjSametimeClientMenuBar.add(getPeopleM());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSametimeClientMenuBar;
}
/**
 * Return the StatusCB property value.
 * @return java.awt.Choice
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.Choice getStatusCB() {
	if (ivjStatusCB == null) {
		try {
			ivjStatusCB = new java.awt.Choice();
			ivjStatusCB.setName("StatusCB");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStatusCB;
}
/**
 * Return the UidTF property value.
 * @return java.awt.TextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.TextField getUidTF() {
	if (ivjUidTF == null) {
		try {
			ivjUidTF = new java.awt.TextField();
			ivjUidTF.setName("UidTF");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjUidTF;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getStatusCB().addItemListener(ivjEventHandler);
	getUidTF().addTextListener(ivjEventHandler);
	getPwdTF().addTextListener(ivjEventHandler);
	getUidTF().addActionListener(ivjEventHandler);
	getPwdTF().addActionListener(ivjEventHandler);
	getOkBtn().addActionListener(ivjEventHandler);
	getCanBtn().addActionListener(ivjEventHandler);
	getLogoffMI().addActionListener(ivjEventHandler);
	getLoginMI().addActionListener(ivjEventHandler);
	getAddMI().addActionListener(ivjEventHandler);
	this.addWindowListener(ivjEventHandler);
	getRemoveMI().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SametimeClient");
		setMenuBar(getSametimeClientMenuBar());
		setLayout(new java.awt.BorderLayout());
		setSize(231, 491);
		setTitle("IM for Design Solutions");
		add(getContentsPane(), "Center");
		initConnections();
		connEtoC2();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Insert the method's description here.
 * Creation date: (6/12/2002 1:55:59 PM)
 */
public void loadBuddyList() {
	STUser user;
	String name;
	String id;
	int i,j;

	File bl = new File("stbuddy.dat");

	if (bl.exists()) {
		try {
			BufferedReader rdr = new BufferedReader(new FileReader("stbuddy.dat"));

			String line = rdr.readLine();
			while (line != null) {
				i = line.indexOf(';');
				j = line.indexOf(';',i+1);
				name = line.substring(0,i);
				id = line.substring(i+1,j);
				user = new STUser(new STId(id, ""), name, "");
				m_awarenessList.addUser(user);
				line = rdr.readLine();
			}

			rdr.close();
		}
		catch (Exception e) {
			System.out.println("Unable to read buddy list.");
		}
	}
}
/**
 * Comment
 */
public void login(ActionEvent e) {
	//System.out.println("Login action event");
	if (e.getSource() == getOkBtn() || getOkBtn().isEnabled()) {
		getCommunityService().loginByPassword("localhost",getUidTF().getText(),getPwdTF().getText());
		getLoginDlg().setVisible(false);

		try {
			cfg.setProperty("IMIDENTITY",getUidTF().getText());
			cfg.store("edesign.ini");
		}
		catch (IOException e1) {
			System.out.println("Could not save IM id.");
		}
	}

	return;
}
/**
 * Comment
 */
public void loginDone(LoginEvent e) {
	//System.out.println("Logged In");

	getStatusCB().setEnabled(true);
	getStatusCB().removeAll();
	getStatusCB().addItem(ACTIVE);
	getStatusCB().addItem(AWAY);
	getStatusCB().addItem(DND);

	getLoginMI().setEnabled(false);
	getLogoffMI().setEnabled(true);

	loadBuddyList();

	return;
}
/**
 * Comment
 */
public void logoutDone(LoginEvent e) {
	//System.out.println("Logged Out");

	if (! getLogoffMI().isEnabled())
		return;

	getStatusCB().setEnabled(false);
	getStatusCB().removeAll();
	getStatusCB().addItem(DISCONNECTED);

	getLoginMI().setEnabled(true);
	getLogoffMI().setEnabled(false);

	storeBuddyList();

	return;
}
/**
 * Insert the method's description here.
 * Creation date: (7/3/2002 11:11:40 AM)
 * @param args java.lang.String[]
 */
public static void main(String[] args) {
	if (args.length > 0) {
		System.out.println("error starting IM: too many arguments.");
		System.exit(1);
	}

	int port = 1533;
	ConfigFile cfg = new ConfigFile();

	try {
		BufferedReader rdr = new BufferedReader(new InputStreamReader(System.in));
		String line = rdr.readLine();

		port = Integer.parseInt(line);
	}
	catch (IOException e) {
		System.out.println("error starting IM: unable to read port from stdin");
		System.exit(1);
	}

	try {
		cfg.load("edesign.ini");
	}
	catch (IOException e) {
		System.out.println("error starting IM: unable to load edesign.ini");
		System.exit(1);
	}

	SametimeClient client = new SametimeClient(port,cfg);

	client.setVisible(true);
}
/**
 * Insert the method's description here.
 * Creation date: (6/12/2002 3:55:42 PM)
 * @param e com.lotus.sametime.commui.ResolveViewEvent
 */
public void resolved(ResolveViewEvent e) {
	//System.out.println("Resolved event");
	STUser user = e.getUser();
	m_awarenessList.addUser(user);
}
/**
 * Insert the method's description here.
 * Creation date: (6/12/2002 3:55:42 PM)
 * @param e com.lotus.sametime.commui.ResolveViewEvent
 */
public void resolveFailed(ResolveViewEvent e) {
	System.out.println("Couldn't find user. Reason = " + e.getReason());
}
/**
 * Set the CommunityService to a new value.
 * @param newValue com.lotus.sametime.community.CommunityService
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void setCommunityService(com.lotus.sametime.community.CommunityService newValue) {
	if (ivjCommunityService != newValue) {
		try {
			/* Stop listening for events from the current object */
			if (ivjCommunityService != null) {
				ivjCommunityService.removeLoginListener(ivjEventHandler);
			}
			ivjCommunityService = newValue;

			/* Listen for events from the new object */
			if (ivjCommunityService != null) {
				ivjCommunityService.addLoginListener(ivjEventHandler);
			}
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	};
	// user code begin {3}
	// user code end
}
/**
 * Comment
 */
public void setup() {
	try {
		m_session = new STSession("IM4DS " + this);
		m_session.loadAllComponents();
		m_session.start();
	}
	catch(DuplicateObjectException e){
		e.printStackTrace();
	}

	setCommunityService((CommunityService) m_session.getCompApi(CommunityService.COMP_NAME));
	conn[0] = (Connection) new SocketConnection(port,2000);
	getCommunityService().setConnectivity(conn);

	m_awarenessList = new AwarenessList(m_session, true);
	m_awarenessList.addAwarenessViewListener(avl);
	getContentsPane().add(m_awarenessList, BorderLayout.CENTER);

	getStatusCB().addItem(DISCONNECTED);

	AVController avController = new AVController(m_awarenessList.getModel());
	m_awarenessList.setController(avController);

	pack();

	Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
	setSize(231,491);
	setLocation((int)((d.width - getSize().width)/2),(int)((d.height - getSize().height)/2));

	return;
}
/**
 * Comment
 */
public void statusChanged(ItemEvent e) {
	if (e.getSource() == getStatusCB()) {
		STUserStatus status;

		if (e.getItem().equals(ACTIVE))
			status = new STUserStatus(STUserStatus.ST_USER_STATUS_ACTIVE, 0, ACTIVE);
		else if (e.getItem().equals(AWAY))
			status = new STUserStatus(STUserStatus.ST_USER_STATUS_AWAY, 0, AWAY);
		else if (e.getItem().equals(DND))
			status = new STUserStatus(STUserStatus.ST_USER_STATUS_DND, 0, DND);
		else
			return;

		if (getCommunityService().isLoggedIn())
			getCommunityService().getLogin().changeMyStatus(status);
	}

	return;
}
/**
 * Insert the method's description here.
 * Creation date: (6/12/2002 3:57:48 PM)
 */
public void storeBuddyList() {
	STUser[] usersList = m_awarenessList.getItems();

	try {
		PrintStream p = new PrintStream(new FileOutputStream("stbuddy.dat"));

		for (int i = 0; i < usersList.length; i++) {
			p.print(usersList[i].getName());
			p.print(';');
			p.print(usersList[i].getId().getId());
			p.println(';');
		}

		p.close();
	}
	catch(IOException e) {
		System.out.println("Unable to save buddy list.");
	}
}
/**
 * Comment
 */
public void textChg() {
	if (getUidTF().getText().trim().length() != 0 &&
		getPwdTF().getText().trim().length() != 0)
		getOkBtn().setEnabled(true);
	else
		getOkBtn().setEnabled(false);

	return;
}
}

package oem.edge.ed.odc.meeting.client;

import java.util.*;
import oem.edge.ed.odc.dsmp.common.DSMPEvent;
/*                       Copyright Header Check                             */
/*   --------------------------------------------------------------------   */
/*                                                                          */
/*     OCO Source Materials                                                 */
/*                                                                          */
/*     Product(s): PROFIT                                                   */
/*                                                                          */
/*     (C)Copyright IBM Corp. 2003-2004                                     */
/*                                                                          */
/*     All Rights Reserved                                                  */
/*     US Government Users Restricted Rigts                                 */
/*                                                                          */
/*     The source code for this program is not published or otherwise       */
/*     divested of its trade secrets, irrespective of what has been         */
/*     deposited with the US Copyright Office.                              */
/*                                                                          */
/*   --------------------------------------------------------------------   */
/*     Please do not remove any of these commented lines  20 lines          */
/*   --------------------------------------------------------------------   */
/*                       Copyright Footer Check                             */

/**
 * An group event generated by a dispatcher in response to protocol received
 * from the server. See the is*() methods for definition of valid properties
 * set for specific event types.
 *
 * @version 1.0.0.0 02/21/2003
 * @author Mike Zarnick
 */
public class GroupEvent extends DSMPEvent {
	/**
	 * Constant used to indicate <i>create group</i> request succeeded.
	 * @see #isCreatedGroup()
	 * @see #reason
	 */
	static public int CREATEGROUP = 0;
	/**
	 * Constant used to indicate <i>create group</i> request failed.
	 * @see #isCreatedGroupFailed()
	 * @see #reason
	 */
	static public int CREATEGROUP_FAILED = 1;
	/**
	 * Constant used to indicate <i>delete group</i> request succeeded.
	 * @see #isDeleteGroup()
	 * @see #reason
	 */
	static public int DELETEGROUP = 2;
	/**
	 * Constant used to indicate <i>delete group</i> request failed.
	 * @see #isDeleteGroupFailed()
	 * @see #reason
	 */
	static public int DELETEGROUP_FAILED = 3;
	/**
	 * Constant used to indicate <i>modify group acl</i> request succeeded.
	 * @see #isModifyGroupAcl()
	 * @see #reason
	 */
	static public int MODIFYGROUPACL = 4;
	/**
	 * Constant used to indicate <i>modify group acl</i> request failed.
	 * @see #isModifyGroupAclFailed()
	 * @see #reason
	 */
	static public int MODIFYGROUPACL_FAILED = 5;
	/**
	 * Constant used to indicate <i>modify group attribute</i> request succeeded.
	 * @see #isModifyGroupAttr()
	 * @see #reason
	 */
	static public int MODIFYGROUPATTR = 6;
	/**
	 * Constant used to indicate <i>modify group attribute</i> request failed.
	 * @see #isModifyGroupAttrFailed()
	 * @see #reason
	 */
	static public int MODIFYGROUPATTR_FAILED = 7;
	/**
	 * Constant used to indicate <i>query groups</i> request succeeded.
	 * @see #isQueryGroups()
	 * @see #reason
	 */
	static public int QUERYGROUPS = 8;
	/**
	 * Constant used to indicate <i>query groups</i> request failed.
	 * @see #isQueryGroupsFailed()
	 * @see #reason
	 */
	static public int QUERYGROUPS_FAILED = 9;

	/**
	 * Error message. Not always valid, see various is*() methods to determine
	 * if property is set.
	 **/
	public String message;
	/**
	 * True if GroupInfo objects in the vector contain member lists. Not always valid, see
	 * various is*() methods to determine if property is set.
	 **/
	public boolean includesMembers;
	/**
	 * True if GroupInfo objects in the vector contain access lists. Not always valid, see
	 * various is*() methods to determine if property is set.
	 **/
	public boolean includesAccess;
	/**
	 * Vector containing additional data. Not always valid, see various is*() methods to determine
	 * if property is set.
	 **/
	public Vector vectorData;
/**
 * GroupEvent constructor for basic events.
 * <p>This constructor is not normally called directly. Those interested in receiving these events
 * should register as a GroupListener with DSMPDispatcher instead.</p>
 * @param reason int
 * @param flags byte
 * @param handle byte
 *
 * @see #reason
 * @see #flags
 * @see #handle
 * @see #DSMPDispatcher.addGroupListener()
 */
public GroupEvent(int reason, byte flags, byte handle) {
	super(reason, flags, handle);
}
/**
 * GroupEvent constructor for group error events.
 * <p>This constructor is not normally called directly. Those interested in receiving these events
 * should register as a GroupListener with DSMPDispatcher instead.</p>
 * @param reason int
 * @param flags byte
 * @param handle byte
 * @param message String
 *
 * @see #reason
 * @see #flags
 * @see #handle
 * @see #message
 * @see #DSMPDispatcher.addGroupListener()
 */
public GroupEvent(int reason, byte flags, byte handle, String message) {
	super(reason, flags, handle);
	this.message = message;
}
/**
 * GroupEvent constructor for query groups reply events.
 * <p>This constructor is not normally called directly. Those interested in receiving these events
 * should register as a GroupListener with DSMPDispatcher instead.</p>
 * @param reason int
 * @param flags byte
 * @param handle byte
 * @param includesMembers boolean
 * @param includesAccess boolean
 * @param v Vector
 *
 * @see #reason
 * @see #flags
 * @see #handle
 * @see #includesMembers
 * @see #includesAccess
 * @see #vectorData
 * @see #DSMPDispatcher.addGroupListener()
 */
public GroupEvent(int reason, byte flags, byte handle, boolean includesMembers, boolean includesAccess, Vector v) {
	super(reason, flags, handle);
	this.includesMembers = includesMembers;
	this.includesAccess = includesAccess;
	this.vectorData = v;
}
/**
 * Identifies a server response to a <i>create group</i> request. The
 * server processed the request without error. The following properties are
 * defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified with original request</li>
 * </ul>
 *
 * @see #handle
 * @return true if this event represents a server response for a <i>create group</i> 
 *              request which was processed without error
 */
public boolean isCreatedGroup() {
	return reason == CREATEGROUP;
}
/**
 * Identifies a server response to a <i>create group</i> request. The
 * server encountered an error while processing the request. The following
 * properties are defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified on original request</li>
 * <li>message - string which indicates error encountered</li>
 * </ul>
 *
 * @see #handle
 * @see #message
 * @return true if this event represents a server response for a <i>create group</i> 
 *              request which encountered an error
 */
public boolean isCreatedGroupFailed() {
	return reason == CREATEGROUP_FAILED;
}
/**
 * Identifies a server response to a <i>delete group</i> request. The
 * server processed the request without error. The following properties are
 * defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified with original request</li>
 * </ul>
 *
 * @see #handle
 * @return true if this event represents a server response for a <i>delete group</i> 
 *              request which was processed without error
 */
public boolean isDeleteGroup() {
	return reason == DELETEGROUP;
}
/**
 * Identifies a server response to a <i>delete group</i> request. The
 * server encountered an error while processing the request. The following
 * properties are defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified on original request</li>
 * <li>message - string which indicates error encountered</li>
 * </ul>
 *
 * @see #handle
 * @see #message
 * @return true if this event represents a server response for a <i>delete group</i> 
 *              request which encountered an error
 */
public boolean isDeleteGroupFailed() {
	return reason == DELETEGROUP_FAILED;
}
/**
 * Identifies a server response to a <i>modify group acl</i> request. The
 * server processed the request without error. The following properties are
 * defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified with original request</li>
 * </ul>
 *
 * @see #handle
 * @return true if this event represents a server response for a <i>modify group acl</i> 
 *              request which was processed without error
 */
public boolean isModifyGroupAcl() {
	return reason == MODIFYGROUPACL;
}
/**
 * Identifies a server response to a <i>modify group acl</i> request. The
 * server encountered an error while processing the request. The following
 * properties are defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified on original request</li>
 * <li>message - string which indicates error encountered</li>
 * </ul>
 *
 * @see #handle
 * @see #message
 * @return true if this event represents a server response for a <i>modify group acl</i> 
 *              request which encountered an error
 */
public boolean isModifyGroupAclFailed() {
	return reason == MODIFYGROUPACL_FAILED;
}
/**
 * Identifies a server response to a <i>modify group attribute</i> request. The
 * server processed the request without error. The following properties are
 * defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified with original request</li>
 * </ul>
 *
 * @see #handle
 * @return true if this event represents a server response for a <i>modify group attribute</i> 
 *              request which was processed without error
 */
public boolean isModifyGroupAttr() {
	return reason == MODIFYGROUPATTR;
}
/**
 * Identifies a server response to a <i>modify group attribute</i> request. The
 * server encountered an error while processing the request. The following
 * properties are defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified on original request</li>
 * <li>message - string which indicates error encountered</li>
 * </ul>
 *
 * @see #handle
 * @see #message
 * @return true if this event represents a server response for a <i>modify group attribute</i> 
 *              request which encountered an error
 */
public boolean isModifyGroupAttrFailed() {
	return reason == MODIFYGROUPATTR_FAILED;
}
/**
 * Identifies a server response to a <i>query groups</i> request. The
 * server processed the request without error. The following properties are
 * defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified with original request</li>
 * <li>includeAccess - boolean true if GroupInfo objects in the vector contain access lists</li>
 * <li>includeMembers - boolean true if GroupInfo objects in the vector contain member lists</li>
 * <li>vectorData - vector of GroupInfo objects</li>
 * </ul>
 *
 * @see #handle
 * @see #includeAccess
 * @see #includeMembers
 * @see #vectorData
 * @return true if this event represents a server response for a <i>query groups</i> 
 *              request which was processed without error
 */
public boolean isQueryGroups() {
	return reason == QUERYGROUPS;
}
/**
 * Identifies a server response to a <i>query groups</i> request. The
 * server encountered an error while processing the request. The following
 * properties are defined for this event:
 *
 * <ul>
 * <li>handle - byte identifier specified on original request</li>
 * <li>message - string which indicates error encountered</li>
 * </ul>
 *
 * @see #handle
 * @see #message
 * @return true if this event represents a server response for a <i>query groups</i> 
 *              request which encountered an error
 */
public boolean isQueryGroupsFailed() {
	return reason == QUERYGROUPS_FAILED;
}
}
